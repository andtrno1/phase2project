{"ast":null,"code":"module.exports = {\n  ceil: function ceil(val) {\n    return Math.ceil(val / 10) * 10;\n  },\n  round: function round(n) {\n    return Math.round(n);\n  },\n  fround: function fround(n) {\n    return Math.fround(n);\n  },\n\n  /**\r\n   * Returns the largest integer less than or equal to the given number.\r\n   * @param n\r\n   * @returns {number}\r\n   */\n  floor: function floor(n) {\n    return Math.floor(n);\n  },\n  sign: function sign(n) {\n    return Math.sign(n);\n  },\n  abs: function abs(n) {\n    return Math.abs(n);\n  },\n  imul: function imul(a, b) {\n    return Math.imul(a, b);\n  },\n  pow: function pow(base, exp) {\n    return Math.pow(base, exp);\n  },\n  square: function square(val) {\n    return val * val;\n  },\n  cube: function cube(val) {\n    return val * val * val;\n  },\n  sqrt: function sqrt(n) {\n    return Math.sqrt(n);\n  },\n  cbrt: function cbrt(n) {\n    return Math.cbrt(n);\n  },\n  exp: function exp(n) {\n    return Math.exp(n);\n  },\n  expm1: function expm1(n) {\n    return Math.expm1(n);\n  },\n  trunc: function trunc(n) {\n    return Math.trunc(n);\n  },\n  greatestCommonDivisor: function gcd(x, y) {\n    var remainder = x % y;\n\n    if (remainder === 0) {\n      return y;\n    }\n\n    return gcd(y, remainder);\n  },\n  log: function log(n) {\n    return Math.log(n);\n  },\n  log2: function log2(n) {\n    return Math.log2(n);\n  },\n  log10: function log10(n) {\n    return Math.log10(n);\n  },\n  log1p: function log1p(n) {\n    return Math.log1p(n);\n  },\n  hypot: function hypot() {\n    return Math.hypot.apply(Math, arguments);\n  },\n\n  /**\r\n   * Performs ceil in the n decimal digit of num\r\n   * @param num\r\n   * @param n\r\n   * @returns {number}\r\n   */\n  dCeil: function dCeil(num, n) {\n    var multiplyValue = Math.pow(10, n);\n    console.log('dCeil', num, n, multiplyValue, Math.ceil(num / multiplyValue) * multiplyValue);\n    return Math.ceil(num * multiplyValue) / multiplyValue;\n  },\n\n  /**\r\n   * Performs round in the n decimal digit of num\r\n   * @param num\r\n   * @param n\r\n   * @returns {number}\r\n   */\n  dRound: function dRound(num, n) {\n    var multiplyValue = Math.pow(10, n);\n    return Math.round(num * multiplyValue) / multiplyValue;\n  },\n\n  /**\r\n   * Performs floor in the n decimal digit of num\r\n   * @param num\r\n   * @param n\r\n   * @returns {number}\r\n   */\n  dFloor: function dFloor(num, n) {\n    var multiplyValue = Math.pow(10, n);\n    return Math.floor(num * multiplyValue) / multiplyValue;\n  },\n\n  /**\r\n   * Performs trunc in the n decimal digit of num\r\n   * @param num\r\n   * @param n\r\n   * @returns {number}\r\n   */\n  dTrunc: function dTrunc(num, n) {\n    var multiplyValue = Math.pow(10, n);\n    return Math.trunc(num * multiplyValue) / multiplyValue;\n  }\n};","map":{"version":3,"names":["module","exports","ceil","val","Math","round","n","fround","floor","sign","abs","imul","a","b","pow","base","exp","square","cube","sqrt","cbrt","expm1","trunc","greatestCommonDivisor","gcd","x","y","remainder","log","log2","log10","log1p","hypot","dCeil","num","multiplyValue","console","dRound","dFloor","dTrunc"],"sources":["/mnt/c/Users/uyenh/Documents/phase3project/phase2project/node_modules/math.js/lib/arithmetic/index.js"],"sourcesContent":["module.exports = {\r\n\r\n    ceil: function(val) {\r\n        return Math.ceil(val / 10) * 10;\r\n    },\r\n\r\n    round: function(n) {\r\n        return Math.round(n);\r\n    },\r\n\r\n    fround: function(n) {\r\n        return Math.fround(n)\r\n    },\r\n\r\n    /**\r\n     * Returns the largest integer less than or equal to the given number.\r\n     * @param n\r\n     * @returns {number}\r\n     */\r\n    floor: function(n) {\r\n        return Math.floor(n);\r\n    },\r\n\r\n    sign: function(n) {\r\n        return Math.sign(n);\r\n    },\r\n\r\n    abs: function(n) {\r\n        return Math.abs(n)\r\n    },\r\n\r\n    imul: function(a, b) {\r\n        return Math.imul(a, b);\r\n    },\r\n\r\n    pow: function(base, exp) {\r\n        return Math.pow(base, exp);\r\n    },\r\n\r\n    square: function(val) {\r\n        return val * val;\r\n    },\r\n\r\n    cube: function(val) {\r\n        return val * val * val;\r\n    },\r\n\r\n    sqrt: function(n) {\r\n        return Math.sqrt(n);\r\n    },\r\n\r\n    cbrt: function (n) {\r\n        return Math.cbrt(n);\r\n    },\r\n\r\n    exp: function (n) {\r\n        return Math.exp(n);\r\n    },\r\n\r\n    expm1: function(n) {\r\n        return Math.expm1(n);\r\n    },\r\n\r\n    trunc: function(n) {\r\n        return Math.trunc(n);\r\n    },\r\n\r\n    greatestCommonDivisor: function gcd(x, y) {\r\n        var remainder = x % y;\r\n        if (remainder === 0) {\r\n            return y;\r\n        }\r\n\r\n        return gcd(y, remainder);\r\n    },\r\n\r\n    log: function (n) {\r\n        return Math.log(n);\r\n    },\r\n\r\n    log2: function (n) {\r\n        return Math.log2(n);\r\n    },\r\n\r\n    log10: function (n) {\r\n        return Math.log10(n);\r\n    },\r\n\r\n    log1p: function(n) {\r\n        return Math.log1p(n);\r\n    },\r\n\r\n    hypot: function(...arr) {\r\n        return Math.hypot(...arr);\r\n    }, \r\n\r\n    /**\r\n     * Performs ceil in the n decimal digit of num\r\n     * @param num\r\n     * @param n\r\n     * @returns {number}\r\n     */\r\n    dCeil: function(num, n) {\r\n        let multiplyValue = Math.pow(10, n);\r\n        console.log('dCeil', num, n, multiplyValue, Math.ceil(num / multiplyValue) * multiplyValue)\r\n        return Math.ceil(num * multiplyValue) / multiplyValue;\r\n    },\r\n\r\n    /**\r\n     * Performs round in the n decimal digit of num\r\n     * @param num\r\n     * @param n\r\n     * @returns {number}\r\n     */\r\n    dRound: function(num, n) {\r\n        let multiplyValue = Math.pow(10, n);\r\n        return Math.round(num * multiplyValue) / multiplyValue;\r\n    },\r\n\r\n    /**\r\n     * Performs floor in the n decimal digit of num\r\n     * @param num\r\n     * @param n\r\n     * @returns {number}\r\n     */\r\n    dFloor: function(num, n) {\r\n        let multiplyValue = Math.pow(10, n);\r\n        return Math.floor(num * multiplyValue) / multiplyValue;\r\n    },\r\n\r\n    /**\r\n     * Performs trunc in the n decimal digit of num\r\n     * @param num\r\n     * @param n\r\n     * @returns {number}\r\n     */\r\n    dTrunc: function(num, n) {\r\n        let multiplyValue = Math.pow(10, n);\r\n        return Math.trunc(num * multiplyValue) / multiplyValue;\r\n    }\r\n\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}