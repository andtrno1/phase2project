{"ast":null,"code":"var constants = require('../constants');\n\nmodule.exports = {\n  // Unit converters\n  yardsToFeet: function yardsToFeet(n) {\n    return n * constants.YARDS_TO_FEET_FACTOR;\n  },\n  feetToYards: function feetToYards(n) {\n    return n * constants.FEET_TO_YARDS_FACTOR;\n  },\n  yardsToInches: function yardsToInches(n) {\n    return n * constants.YARDS_TO_INCHES_FACTOR;\n  },\n  inchesToYards: function inchesToYards(n) {\n    return constants.INCHES_TO_YARDS_FACTOR * n;\n  },\n  inchesToMiles: function inchesToMiles(n) {\n    return constants.INCHES_TO_MILES_FACTOR * n;\n  },\n  feetToInches: function feetToInches(n) {\n    return constants.FEET_TO_INCHES_FACTOR * n;\n  },\n  feetToMeters: function feetToMeters(n) {\n    return constants.FEET_TO_METERS_FACTOR * n;\n  },\n  feetToMiles: function feetToMiles(n) {\n    return constants.FEET_TO_MILES_FACTOR * n;\n  },\n  inchesToFeet: function inchesToFeet(n) {\n    return constants.INCHES_TO_FEET_FACTOR * n;\n  },\n  inchesToMeters: function inchesToMeters(n) {\n    return constants.INCHES_TO_METERS_FACTOR * n;\n  },\n  milesToYards: function milesToYards(n) {\n    return constants.MILES_TO_YARDS_FACTOR * n;\n  },\n  milesToMeters: function milesToMeters(n) {\n    return constants.MILES_TO_METERS_FACTOR * n;\n  },\n  milesToInches: function milesToInches(n) {\n    return constants.MILES_TO_INCHES_FACTOR * n;\n  },\n  milesToFeet: function milesToFeet(n) {\n    return constants.MILES_TO_FEET_FACTOR * n;\n  },\n  yardsToMiles: function yardsToMiles(n) {\n    return constants.YARDS_TO_MILES_FACTOR * n;\n  },\n  yardsToMeters: function yardsToMeters(n) {\n    return constants.YARDS_TO_METERS_FACTOR * n;\n  },\n  toFahrenheit: function toFahrenheit(val) {\n    return val * constants.CELSIUS_TO_FAHRENEIT_MUTLIPLIER_FACTOR + constants.CELSIUS_TO_FAHRENEIT_FACTOR;\n  },\n  toCelsius: function toCelsius(val) {\n    return (val - constants.CELSIUS_TO_FAHRENEIT_FACTOR) / constants.CELSIUS_TO_FAHRENEIT_MUTLIPLIER_FACTOR;\n  }\n};","map":{"version":3,"names":["constants","require","module","exports","yardsToFeet","n","YARDS_TO_FEET_FACTOR","feetToYards","FEET_TO_YARDS_FACTOR","yardsToInches","YARDS_TO_INCHES_FACTOR","inchesToYards","INCHES_TO_YARDS_FACTOR","inchesToMiles","INCHES_TO_MILES_FACTOR","feetToInches","FEET_TO_INCHES_FACTOR","feetToMeters","FEET_TO_METERS_FACTOR","feetToMiles","FEET_TO_MILES_FACTOR","inchesToFeet","INCHES_TO_FEET_FACTOR","inchesToMeters","INCHES_TO_METERS_FACTOR","milesToYards","MILES_TO_YARDS_FACTOR","milesToMeters","MILES_TO_METERS_FACTOR","milesToInches","MILES_TO_INCHES_FACTOR","milesToFeet","MILES_TO_FEET_FACTOR","yardsToMiles","YARDS_TO_MILES_FACTOR","yardsToMeters","YARDS_TO_METERS_FACTOR","toFahrenheit","val","CELSIUS_TO_FAHRENEIT_MUTLIPLIER_FACTOR","CELSIUS_TO_FAHRENEIT_FACTOR","toCelsius"],"sources":["/mnt/c/Users/uyenh/Documents/phase3project/phase2project/node_modules/math.js/lib/unit/index.js"],"sourcesContent":["var constants = require('../constants');\nmodule.exports = {\n\n    // Unit converters\n    yardsToFeet: function(n) {\n        return n * constants.YARDS_TO_FEET_FACTOR;\n    },\n\n    feetToYards: function(n) {\n        return n * constants.FEET_TO_YARDS_FACTOR;\n    },\n\n    yardsToInches: function(n) {\n        return n * constants.YARDS_TO_INCHES_FACTOR;\n    },\n\n    inchesToYards: function(n) {\n        return constants.INCHES_TO_YARDS_FACTOR * n;\n    },\n\n    inchesToMiles: function(n) {\n        return constants.INCHES_TO_MILES_FACTOR * n;\n    },\n\n    feetToInches: function(n) {\n        return constants.FEET_TO_INCHES_FACTOR * n;\n    },\n\n    feetToMeters: function (n) {\n        return constants.FEET_TO_METERS_FACTOR * n;\n    },\n\n    feetToMiles: function(n) {\n        return constants.FEET_TO_MILES_FACTOR * n;\n    },\n\n    inchesToFeet: function(n) {\n        return constants.INCHES_TO_FEET_FACTOR * n;\n    },\n\n    inchesToMeters: function(n) {\n        return constants.INCHES_TO_METERS_FACTOR * n;\n    },\n\n    milesToYards: function(n) {\n        return constants.MILES_TO_YARDS_FACTOR * n;\n    },\n\n    milesToMeters: function(n) {\n        return constants.MILES_TO_METERS_FACTOR * n;\n    },\n\n    milesToInches: function(n) {\n        return constants.MILES_TO_INCHES_FACTOR * n;\n    },\n\n    milesToFeet: function(n) {\n        return constants.MILES_TO_FEET_FACTOR * n;\n    },\n\n    yardsToMiles: function(n) {\n        return constants.YARDS_TO_MILES_FACTOR * n;\n    },\n\n    yardsToMeters: function(n) {\n        return constants.YARDS_TO_METERS_FACTOR * n;\n    },\n\n    toFahrenheit: function(val) {\n        return val * constants.CELSIUS_TO_FAHRENEIT_MUTLIPLIER_FACTOR + constants.CELSIUS_TO_FAHRENEIT_FACTOR;\n    },\n\n    toCelsius: function(val) {\n        return (val - constants.CELSIUS_TO_FAHRENEIT_FACTOR) / constants.CELSIUS_TO_FAHRENEIT_MUTLIPLIER_FACTOR;\n    },\n\n};\n"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACAC,MAAM,CAACC,OAAP,GAAiB;EAEb;EACAC,WAAW,EAAE,qBAASC,CAAT,EAAY;IACrB,OAAOA,CAAC,GAAGL,SAAS,CAACM,oBAArB;EACH,CALY;EAObC,WAAW,EAAE,qBAASF,CAAT,EAAY;IACrB,OAAOA,CAAC,GAAGL,SAAS,CAACQ,oBAArB;EACH,CATY;EAWbC,aAAa,EAAE,uBAASJ,CAAT,EAAY;IACvB,OAAOA,CAAC,GAAGL,SAAS,CAACU,sBAArB;EACH,CAbY;EAebC,aAAa,EAAE,uBAASN,CAAT,EAAY;IACvB,OAAOL,SAAS,CAACY,sBAAV,GAAmCP,CAA1C;EACH,CAjBY;EAmBbQ,aAAa,EAAE,uBAASR,CAAT,EAAY;IACvB,OAAOL,SAAS,CAACc,sBAAV,GAAmCT,CAA1C;EACH,CArBY;EAuBbU,YAAY,EAAE,sBAASV,CAAT,EAAY;IACtB,OAAOL,SAAS,CAACgB,qBAAV,GAAkCX,CAAzC;EACH,CAzBY;EA2BbY,YAAY,EAAE,sBAAUZ,CAAV,EAAa;IACvB,OAAOL,SAAS,CAACkB,qBAAV,GAAkCb,CAAzC;EACH,CA7BY;EA+Bbc,WAAW,EAAE,qBAASd,CAAT,EAAY;IACrB,OAAOL,SAAS,CAACoB,oBAAV,GAAiCf,CAAxC;EACH,CAjCY;EAmCbgB,YAAY,EAAE,sBAAShB,CAAT,EAAY;IACtB,OAAOL,SAAS,CAACsB,qBAAV,GAAkCjB,CAAzC;EACH,CArCY;EAuCbkB,cAAc,EAAE,wBAASlB,CAAT,EAAY;IACxB,OAAOL,SAAS,CAACwB,uBAAV,GAAoCnB,CAA3C;EACH,CAzCY;EA2CboB,YAAY,EAAE,sBAASpB,CAAT,EAAY;IACtB,OAAOL,SAAS,CAAC0B,qBAAV,GAAkCrB,CAAzC;EACH,CA7CY;EA+CbsB,aAAa,EAAE,uBAAStB,CAAT,EAAY;IACvB,OAAOL,SAAS,CAAC4B,sBAAV,GAAmCvB,CAA1C;EACH,CAjDY;EAmDbwB,aAAa,EAAE,uBAASxB,CAAT,EAAY;IACvB,OAAOL,SAAS,CAAC8B,sBAAV,GAAmCzB,CAA1C;EACH,CArDY;EAuDb0B,WAAW,EAAE,qBAAS1B,CAAT,EAAY;IACrB,OAAOL,SAAS,CAACgC,oBAAV,GAAiC3B,CAAxC;EACH,CAzDY;EA2Db4B,YAAY,EAAE,sBAAS5B,CAAT,EAAY;IACtB,OAAOL,SAAS,CAACkC,qBAAV,GAAkC7B,CAAzC;EACH,CA7DY;EA+Db8B,aAAa,EAAE,uBAAS9B,CAAT,EAAY;IACvB,OAAOL,SAAS,CAACoC,sBAAV,GAAmC/B,CAA1C;EACH,CAjEY;EAmEbgC,YAAY,EAAE,sBAASC,GAAT,EAAc;IACxB,OAAOA,GAAG,GAAGtC,SAAS,CAACuC,sCAAhB,GAAyDvC,SAAS,CAACwC,2BAA1E;EACH,CArEY;EAuEbC,SAAS,EAAE,mBAASH,GAAT,EAAc;IACrB,OAAO,CAACA,GAAG,GAAGtC,SAAS,CAACwC,2BAAjB,IAAgDxC,SAAS,CAACuC,sCAAjE;EACH;AAzEY,CAAjB"},"metadata":{},"sourceType":"script"}